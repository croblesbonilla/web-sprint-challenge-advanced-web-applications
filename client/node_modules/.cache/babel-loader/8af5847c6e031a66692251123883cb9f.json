{"ast":null,"code":"var _jsxFileName = \"/Users/robles/Desktop/lambda-school/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from \"./utils/axiosWithAuth\";\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]);\n  const [dependency, setDependency] = useState(false);\n  useEffect(() => {\n    axiosWithAuth().get('colors').then(res => {\n      setColorList(res.data);\n      set;\n    }).catch(err => {\n      console.log(err.response);\n    });\n  }, [dependency]); // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n\n  return React.createElement(React.Fragment, null, React.createElement(ColorList, {\n    colors: colorList,\n    updateColors: setColorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Bubbles, {\n    colors: colorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default BubblePage;","map":{"version":3,"sources":["/Users/robles/Desktop/lambda-school/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js"],"names":["React","useState","useEffect","axiosWithAuth","Bubbles","ColorList","BubblePage","colorList","setColorList","dependency","setDependency","get","then","res","data","set","catch","err","console","log","response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,aAAa,GACZQ,GADD,CACK,QADL,EAECC,IAFD,CAEMC,GAAG,IAAI;AACXL,MAAAA,YAAY,CAACK,GAAG,CAACC,IAAL,CAAZ;AACAC,MAAAA,GAAG;AACJ,KALD,EAMCC,KAND,CAMOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACD,KARD;AASD,GAVQ,EAUN,CAACX,UAAD,CAVM,CAAT,CAJuB,CAevB;AACA;;AAEA,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEF,SAAnB;AAA8B,IAAA,YAAY,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAxBD;;AA0BA,eAAeD,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {axiosWithAuth} from \"./utils/axiosWithAuth\";\n\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]);\n  const [dependency, setDependency] = useState(false)\n\n  useEffect(() => {\n    axiosWithAuth()\n    .get('colors')\n    .then(res => {\n      setColorList(res.data)\n      set\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n  }, [dependency])\n  // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n\n  return (\n    <>\n      <ColorList colors={colorList} updateColors={setColorList} />\n      <Bubbles colors={colorList} />\n    </>\n  );\n};\n\nexport default BubblePage;\n"]},"metadata":{},"sourceType":"module"}